server {
    listen 443 ssl;
    listen [::]:443 ssl;
    listen 443 quic;
    listen [::]:443 quic;
    http2 on;
    http3 on;

    server_name www.domain domain;
    root /var/www/www.domain;
    index index.php index.html;

    ssl_certificate /etc/letsencrypt/live/main/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/main/privkey.pem;

    # TLS/QUIC 優化
    ssl_session_timeout 10m;
    ssl_protocols TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers HIGH:!aNULL:!MD5;
    ssl_session_cache shared:SSL:50m;

    # HTTP/3 標頭提示
    add_header Alt-Svc 'h3=":443"; ma=86400';
    add_header QUIC-Status $http3;

    # Gzip 壓縮
    gzip on;
    gzip_comp_level 5;
    gzip_min_length 256;
    gzip_proxied any;
    gzip_disable "MSIE [1-6]\.";
    gzip_buffers 16 8k;
    gzip_http_version 1.1;
    gzip_static on;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    # 限制請求體積
    client_max_body_size 128M;

    # 如果訪問的是非 www 域名，重導向
    if ($host = "gebu8f.com") {
        return 301 https://www.domain$request_uri;
    }

    # 圖片緩存設定
    location ~* \.(png|jpg|jpeg|gif|ico|svg|webp|css|js|woff2?)$ {
    expires 30d;
    access_log off;
    add_header Cache-Control "public, max-age=2592000";
    }

    # 防盜鏈
    location ~* \.(png|jpg|gif)$ {
        valid_referers none blocked www.domain domain;
        if ($invalid_referer) {
            return 403;
        }
    }

    # 主網站邏輯（含 token 判斷）
    location / {
      try_files $uri $uri/ /index.php?$args;
    }

    # PHP 支援
    location ~ \.php$ {
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_index index.php;
        fastcgi_pass unix:/run/php/php-fpm.sock;
        fastcgi_buffering on;
        fastcgi_buffers 16 16k;
        fastcgi_buffer_size 32k;
    }

    # 禁止存取隱藏文件
    location ~ /\. {
        deny all;
    }
}

# 非 www HTTP 轉 HTTPS
server {
    listen 80;
    server_name domain;
    return 301 https://www.domain$request_uri;
}

# www HTTP 轉 HTTPS（並保留 ACME 支援）
server {
    listen 80;
    server_name www.domain;

    location /.well-known/acme-challenge/ {
        root /var/www/www.domain;
        try_files $uri $uri/ =404;
    }

    location / {
        return 301 https://$host$request_uri;
    }
}